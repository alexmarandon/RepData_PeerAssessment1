?library
library('datasets')
library('digests')
library('digest')
detach("package:digest", unload=TRUE)
library("digest", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:digest", unload=TRUE)
install.packages("BayesLCA")
install.packages("arules")
library(arules)
library(BayesLCA)
detach("package:arules", unload=TRUE)
detach("package:coda", unload=TRUE)
detach("package:e1071", unload=TRUE)
detach("package:BayesLCA", unload=TRUE)
library("coda", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:coda", unload=TRUE)
library("e1071", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:e1071", unload=TRUE)
detach("package:lattice", unload=TRUE)
detach("package:Matrix", unload=TRUE)
library("lattice", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:lattice", unload=TRUE)
library("arules", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("BayesLCA", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:arules", unload=TRUE)
library("arules", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("devtools")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
devtools::install_github("google/CausalImpact")
library("CausalImpact", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?arisma.sim
?arima.sim
x1<-100+arima.sim(model=list(ar=0.999),n=100)
plot(x1)
y<1.2*x1+rnorm(100)
y<-1.2*x1+rnorm(100)
plot(y)
y[71:100]<-y[71:100]+10
data<-cbind(y,x1)
class(data)
data
str(data)
str(x)
str(x1)
dim(data)
data
plot(y)
matplot(data, type = "l")
?matplot
pre.period <-c(1,70)
post.period <-c(71,100)
impact <- CausalImpact(data, pre.period, post.period)
plot(impact)
impact <- CausalImpact(data, pre.period, post.period, alpha=0.01)
plot(impact)
summary(impact)
summary(impact,"report")
matplot(data, type = "l")
install.packages("xml")
;
install.packages("XML")
install.packages("xlsx")
?xpathSApply
?data.table
?data.tables
install.packages("data.tables")
install.packages("data.table")
install.packages("arulesViz")
install.packages("plotrix")
library(plotrix)
plot(0:6, 0:6, type="n", xaxt="n", yaxt="n", frame.plot=FALSE, xlab="", ylab="")
lines(c(1,3), c(1,1), col="black")
lines(c(3,3), c(1,3), col="black")
lines(c(1,3), c(1,3), col="black")
d <- draw.circle(x=1,y=1, radius=0.5, col="yellow", border="black")
d <- draw.circle(x=3,y=1, radius=0.5, col="yellow", border="black")
d <- draw.circle(x=3,y=3, radius=0.5, col="yellow", border="black")
install.packages("iterators")
?log
log(3)
log(3,e)
log(3,exp(1))
e=exp(1)
log(3)
log(3,e)
log(3,2)
log(5,2)
log(9,2)
?gamma
?floor
?binary
?bin
?hex
?dec
?decimal
library(R.utils)
install.packages("R.utils")
library(R.utils)
intToBin(12)
gamma1 <- function(x,base=2) {return(1+floor(log(x,base)))}
gamma1(1,2)
gamma1(3,2)
gamma1(5,2)
?rep
?xyplot
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c(« point », « smooth » ))
qplot(displ, hwy, data = mpg, geom = c("point","smooth"))
qplot(hwy, data = mpg, fill = drv)
facets - qplot(displ, hwy, data = mpg, facets = . ~ drv)
facets - qplot(displ, hwy, data = mpg, facets = .~ drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(displ, hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
?cut
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?par
?splom
?treillis.par.set
?print.treillis
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
?transform
?trellis.par.set
?corr
?cor
SL <- c(5.1,4.9,4.7,4.6,5.0)
SW <- c(3.5,3.0, 3.2, 3.1, 5.4)
cor(SL,SW)
cor(SL,SW, method="pearson")
cor(SL,SW, method="spearman")
cor(SL,SW, method="kendall")
SL <- (6.9,6.7,6.9,5.8)
SL <- c(6.9,6.7,6.9,5.8)
SL <- c(6.9,6.7,6.9,5.8,6.8)
SW <- c(3.1,3.1,3.1,2.7,3.2)
cor(SL,SW, method="pearson")
setwd("~/Dropbox/data/coursera/data science specialization/05 - repdata/RepData_PeerAssessment1")
library(dplyr)
data <- tbl_df(read.csv("activity.csv", colClasses=c("integer", "Date", "integer")));
library(dplyr)
data <- tbl_df(read.csv("activity.csv", colClasses=c("integer", "Date", "integer")));
as.data.frame(data)
?read.csv
library(dplyr)
data <- tbl_df(read.csv("activity.csv");
library(dplyr)
data <- tbl_df(read.csv("activity.csv")
)
as.data.frame(data)
head(data,10)
head(data,100)
head(as.data.frame(data),100)
head(as.data.frame(data),1000)
data <- tbl_df(read.csv("activity.csv", colClasses=c("integer", "Date", "integer")))
head(as.data.frame(data),1000)
library(dplyr)
data <- tbl_df(read.csv("activity.csv", colClasses=c("integer", "Date", "integer")))
data_gb_dt <- group_by(data, date)
data_dt <- summarize(data_gb_dt, n = sum(steps))
as.data.frame(data_dt)
library(dplyr)
data <- tbl_df(read.csv("activity.csv", colClasses=c("integer", "Date", "integer")))
data_gb_dt <- group_by(data, date)
data_dt <- summarize(data_gb_dt, nb_steps = sum(steps))
as.data.frame(data_dt)
hist(nb_steps)
hist(data_gb_dt$nb_steps)
hist(data_dt$nb_steps)
?hist
hist(data_dt$nb_steps, breaks=12)
hist(data_dt$nb_steps, breaks=20)
?sum
data_gb_dt <- group_by(data, date)
data_dt <- summarize(data_gb_dt, nb_steps = sum(steps))
as.data.frame(data_dt)
hist(data_dt$nb_steps)
hist(data_dt$nb_steps, breaks=20)
data_dt <- summarize(data_gb_dt, nb_steps = sum(steps, na.rm=TRUE))
as.data.frame(data_dt)
hist(data_dt$nb_steps, breaks=20)
?hist
hist(data_dt$nb_steps, breaks=20, col=red)
hist(data_dt$nb_steps, breaks=20, col=Red)
hist(data_dt$nb_steps, breaks=20, col="Red")
?col
hist(data_dt$nb_steps, breaks=20, col="#00AA00")
hist(data_dt$nb_steps, breaks=20, col="#007700")
hist(data_dt$nb_steps, breaks=20, col="#005500")
hist(data_dt$nb_steps, breaks=20, col="#005544")
hist(data_dt$nb_steps, breaks=20, col="#005555")
?hist
hist(data_dt$nb_steps, breaks=20, col="#005555", main="Zoi")
hist(data_dt$nb_steps, breaks=20, col="#005555", main="Total number of steps taken each day")
?hist
hist(data_dt$nb_steps, breaks=20, col="#005555", main="Total number of steps taken each day", xlab = "Sum of steps")
```
```
?library
library(dplyr)
library(dplyr, quietly=TRUE)
library(dplyr, quietly=TRUE, warn.conflicts = FALSE)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
hist(data_dt$nb_steps, breaks=20, col="#005555"
, main="Total number of steps taken each day", xlab = "Sum of steps")
mean(data_dt$nb_steps, na.rm=TRUE)
median(data_dt$nb_steps, na.rm=TRUE)
median(data_dt$nb_steps, na.rm=TRUE)
data_gb_int<- group_by(data, interval)
data_int <- summarize(data_gb_int, m = mean(steps,na.rm=TRUE))
as.data.frame(data_int)
data_gb_int
as.data.frame(data_gb_int)
head(as.data.frame(data_gb_int),10)
filter(data_gb_int, interval=0)
filter(data_gb_int, interval==0)
as.data.frame(filter(data_gb_int, interval==0))
as.data.frame(filter(data_gb_int, interval==0, rm.na=TRUE))
as.data.frame(filter(data_gb_int, interval==0 & is.na==FALSE))
as.data.frame(filter(data_gb_int, interval==0 & is.na(interval)==FALSE))
as.data.frame(filter(data_gb_int, interval==0 && is.na(interval)==FALSE))
?filter
as.data.frame(filter(data_gb_int, interval==0 & is.na(steps)==FALSE))
as.data.frame(filter(data_gb_int, interval==5 & is.na(steps)==FALSE))
as.data.frame(data_gb_int)
as.data.frame(data_int)
data_int <- summarize(data_gb_int, avg_steps = mean(steps,na.rm=TRUE))
plot(data_int$interval, data_in$avg_steps, type="l")
plot(data_int$interval, data_int$avg_steps, type="l")
plot(data_int$interval, data_int$avg_steps, type="l", xlab="Intervals", ylab="Average number of steps across all days")
plot(data_int$interval, data_int$avg_steps, type="l", xlab="Intervals", ylab="Average steps", main="Average number of steps across all days")
which.max(data_int$avg_steps)
data_int$avg_steps[which.max(data_int$avg_steps)]
data_int$intervals[which.max(data_int$avg_steps)]
data_int$interval[which.max(data_int$avg_steps)]
?nafill
is.na(data)
is.na(data$steps)
?aggregate
mutate(data, test=1)
data_dt
data_int
mutate(data, test=data_int[interval,])
mutate(data, test=data_int[interval])
mutate(data, test=data_int[data$interval])
?index
?which
which(data$interval==5)
which(data_int$interval==5)
mutate(data, test=data_int[which(data_int$interval==data$interval)])
mutate(data, test=data_int[which(data_int$interval==interval)])
?sapply
data_int[which(data_int$interval==interval)]
data_int[which(data_int$interval==0)]
which(data_int$interval==0)
data_int[1]
data_int[1,]
data_int$interval[1,]
data_int$interval[1]
data_int$avg_steps[which(data_int$interval==0)]
mutate(data, test=data_int$avg_steps[which(data_int$interval==interval)])
data_int2 <- mutate(data, test=data_int$avg_steps[which(data_int$interval==interval)])
data_int2[!is.na(data_int2$steps)]
is.na(data_int2$steps)
filter(data, is.na(steps)==TRUE)
data
data_int2
data_int2[1]
data_int2[1,]
data_int2[1,]$steps <- data_int2[1,]$test
data_int2[1,]
?which
which(is.na(data_int2$steps))
data_int2[which(is.na(data_int2$steps)),]
data_int2[which(is.na(data_int2$steps)),]$steps <- data_int2[which(is.na(data_int2$steps)),]$test
data2 <- mutate(data, avg_steps=data_int$avg_steps[which(data_int$interval==interval)])
data2[which(is.na(data_int2$steps)),]$steps <- data2[which(is.na(data_int2$steps)),]$avg_steps
data2 <- mutate(data, avg_steps=data_int$avg_steps[which(data_int$interval==interval)])
data2[which(is.na(data2$steps)),]$steps <- data2[which(is.na(data2$steps)),]$avg_steps
as.data.frame(data2)
head(as.data.frame(data2))
head(as.data.frame(data2),100)
head(as.data.frame(data2),1000)
as.data.frame(data_int)
data2 <- mutate(data, avg_steps=data_int$avg_steps[which(data_int$interval==interval)])
as.data.frmae
head(as.data.frame(data2),1000)
data2[which(is.na(data2$steps)),]
as.data.frame(data2[which(is.na(data2$steps)),])
data2 <- mutate(data, avgstps=data_int$avg_steps[which(data_int$interval==interval)])
as.data.frame(data2[which(is.na(data2$steps)),])
data[is.na(data$steps)),]
data[is.na(data$steps),]
data_int$avg_steps[data_int$interval==0]
mutate(data[is.na(data$steps),], steps = data_int$avg_steps[data_int$interval==interval]
)
as.data.frame(mutate(data[is.na(data$steps),], steps = data_int$avg_steps[data_int$interval==interval]))
head(as.data.frame(mutate(data[is.na(data$steps),], steps = data_int$avg_steps[data_int$interval==interval])))
head(as.data.frame(mutate(data[is.na(data$steps),], steps = data_int$avg_steps[data_int$interval==interval])),100)
head(as.data.frame(mutate(data[is.na(data$steps),], steps = data_int$avg_steps[data_int$interval==interval])),1000)
head(as.data.frame(mutate(data[is.na(data$steps),], steps = data_int$avg_steps[data_int$interval==0])),1000)
head(as.data.frame(mutate(data[is.na(data$steps),], steps = data_int$avg_steps[data_int$interval==data$interval])),1000)
head(as.data.frame(mutate(data[is.na(data$steps),], steps = data_int$avg_steps[data_int$interval==interval])),1000)
data
data$zoi <- 0
data <- tbl_df(read.csv("activity.csv", colClasses=c("integer", "Date", "integer")))
as.data.frame(data$interval)
sapply(data$interval, function(x) x)
as.data.frame(data$interval)
sapply(data$interval, function(x) data_int$avg_steps[data$int$interval==x])
sapply(data$interval, function(x) data_int$avg_steps[data_int$interval==x])
sapply(data$interval[is.na(data$steps)], function(x) data_int$avg_steps[data_int$interval==x])
data$steps[is.na(data$steps)] <- sapply(data$interval[is.na(data$steps)], function(x) data_int$avg_steps[data_int$interval==x])
as.data.frame(data)
head(as.data.frame(data),1000)
as.data.frame(data[data$date=="2012-10-01"])
as.data.frame(data[data$date=='2012-10-01'])
data[data$date=='2012-10-01']
data <- tbl_df(read.csv("activity.csv", colClasses=c("integer", "Date", "integer")))
data_gb_int<- group_by(data, interval)
data_int <- summarize(data_gb_int, avg_steps = mean(steps,na.rm=TRUE))
data2 <- data
data2$steps[is.na(data2$steps)] <- sapply(data2$interval[is.na(data2$steps)], function(x) data_int$avg_steps[data_int$interval==x])
data_nafill <- data
data_nafill$steps[is.na(data_nafill$steps)] <- sapply(data_nafill$interval[is.na(data_nafill$steps)], function(x) data_int$avg_steps[data_int$interval==x])
as.data.frame(data)
head(as.data.frame(data),2500
)
head(as.data.frame(data_na_fill),2500)
head(as.data.frame(data_nafill),2500)
data_nafill <- data
data_nafill$steps[is.na(data_nafill$steps)] <- sapply(data_nafill$interval[is.na(data_nafill$steps)], function(x) data_int$avg_steps[data_int$interval==x])
data_gb_dt_nafill <- group_by(data_nafill, date)
data_dt_nafill <- summarize(data_gb_dt_nafill, nb_steps = sum(steps, na.rm=TRUE))
mean <- mean(data_dt_nafill$nb_steps, na.rm=TRUE)
median <- median(data_dt_nafill$nb_steps, na.rm=TRUE)
hist(data_dt_nafill$nb_steps, breaks=20, col="#005555"
, main="Total number of steps taken each day", xlab = "Sum of steps")
hist(data_dt$nb_steps, breaks=20, col="#005555"
, main="Total number of steps taken each day", xlab = "Sum of steps")
hist(data_dt_nafill$nb_steps, breaks=20, col="#005555"
, main="Total number of steps taken each day", xlab = "Sum of steps")
mean_nafill <- mean(data_dt_nafill$nb_steps, na.rm=TRUE)
median_nafill <- median(data_dt_nafill$nb_steps, na.rm=TRUE)
mean <- mean(data_dt$nb_steps, na.rm=TRUE)
median <- median(data_dt$nb_steps, na.rm=TRUE)
?weekday
?weekdays
weekdays(data_nafill$date)
weekdays(data_nafill$date, abbreviate=TRUE)
?factor
ds0 <- as.factor(weekdays(data_nafill$date, abbreviate=TRUE))
ds0
Sys.setlocale("LC_TIME", "en_US.UTF-8")
weekdays(data_nafill$date, abbreviate=TRUE)
mutate(data_nafill, wd = weekdays(date))
mutate(data_nafill, wd = weekdays(date, abbreviate=TRUE))
mutate(data_nafill, wd = weekdays(date, abbreviate=TRUE), if (wd == "Sat" | wd == "Sun") {iswe=1} else {iswe=0})
mutate(data_nafill, wd = weekdays(date, abbreviate=TRUE), iswe = ifelse(wd == "Sat" | wd == "Sun",1,0))
as.data.frame(mutate(data_nafill, wd = weekdays(date, abbreviate=TRUE), iswe = ifelse(wd == "Sat" | wd == "Sun",1,0)))
as.data.frame(mutate(data_nafill, wd = weekdays(date, abbreviate=TRUE), iswe = ifelse(wd %in% c("Sat","Sun"),1,0)))
as.data.frame(mutate(data_nafill, iswe = ifelse(weekdays(date, abbreviate=TRUE) %in% c("Sat","Sun"),1,0)))
as.data.frame(mutate(data_nafill, wd = weekdays(date, abbreviate=TRUE), iswe = ifelse(wd %in% c("Sat","Sun"),1,0)))
as.data.frame(mutate(data_nafill, iswe = ifelse(weekdays(date, abbreviate=TRUE) %in% c("Sat","Sun"),1,0)))
as.data.frame(mutate(data_nafill, isWE = as.factor(ifelse(weekdays(date, abbreviate=TRUE) %in% c("Sat","Sun"),1,0)))
)
data_nafill <- mutate(data_nafill, isWE = as.factor(ifelse(weekdays(date, abbreviate=TRUE) %in% c("Sat","Sun"),1,0)))
as.data.frame(data_nafill)
weekdays(data$date)
head(weekdays(data$date),1000)
head(weekdays(data),10)
head(weekdays(data$date),10)
head(as.data.frame(data_nafill),10)
library(ggplot2)
qplot(interval, steps, data=data_nafill, facets = . ~ isWE)
qplot(interval, steps, data=data_nafill, geom = "density", facets = . ~ isWE)
qplot(interval, steps, data=data_nafill, facets = . ~ isWE)
qplot(interval, steps, data=data_nafill, geom = "line" facets = . ~ isWE)
qplot(interval, steps, data=data_nafill, geom = "line", facets = . ~ isWE)
data_gb_dtwe_nafill <- group_by(data_nafill, date, isWE)
data_dtwe_nafill <- summarize(data_gb_dtwe_nafill, nb_steps = sum(steps, na.rm=TRUE))
hist(data_dt$nb_steps, breaks=20, col="#005555"
, main="Total number of steps taken each day", xlab = "Sum of steps")
plot(data_int$interval, data_int$avg_steps, type="l", xlab="Intervals", ylab="Average steps", main="Average number of steps across all days")
library(dplyr, quietly=TRUE, warn.conflicts = FALSE)
data <- tbl_df(read.csv("activity.csv", colClasses=c("integer", "Date", "integer")))
data_gb_dt <- group_by(data, date)
data_dt <- summarize(data_gb_dt, nb_steps = sum(steps, na.rm=TRUE))
week
hist(data_dt$nb_steps, breaks=20, col="#005555"
, main="Total number of steps taken each day", xlab = "Sum of steps")
data_gb_int<- group_by(data, interval)
data_int <- summarize(data_gb_int, avg_steps = mean(steps,na.rm=TRUE))
max_interval <- data_int$interval[which.max(data_int$avg_steps)]
plot(data_int$interval, data_int$avg_steps, type="l", xlab="Intervals", ylab="Average steps", main="Average number of steps across all days")
data_nafill <- data
data_nafill$steps[is.na(data_nafill$steps)] <- sapply(data_nafill$interval[is.na(data_nafill$steps)], function(x) data_int$avg_steps[data_int$interval==x])
data_gb_dt_nafill <- group_by(data_nafill, date)
data_dt_nafill <- summarize(data_gb_dt_nafill, nb_steps = sum(steps, na.rm=TRUE))
mean_nafill <- mean(data_dt_nafill$nb_steps, na.rm=TRUE)
median_nafill <- median(data_dt_nafill$nb_steps, na.rm=TRUE)
hist(data_dt_nafill$nb_steps, breaks=20, col="#005555"
, main="Total number of steps taken each day", xlab = "Sum of steps")
Sys.setlocale("LC_TIME", "en_US.UTF-8")
library(ggplot2)
data_nafill <- mutate(data_nafill, isWE = as.factor(ifelse(weekdays(date, abbreviate=TRUE) %in% c("Sat","Sun"),1,0)))
data_gb_intwe_nafill<- group_by(data_nafill, interval)
data_intwe_nafill<- summarize(data_gb_intwe_nafill, avg_steps = mean(steps,na.rm=TRUE))
qplot(interval, avg_steps, data=data_intwe_nafill, geom = "line" facets = . ~ isWE)
data_gb_intwe_nafill<- group_by(data_nafill, interval, isWE)
data_intwe_nafill<- summarize(data_gb_intwe_nafill, avg_steps = mean(steps,na.rm=TRUE))
qplot(interval, avg_steps, data=data_intwe_nafill, geom = "line" facets = . ~ isWE)
qplot(interval, avg_steps, data=data_intwe_nafill, geom = "line", facets = . ~ isWE)
qplot(interval, avg_steps, data=data_intwe_nafill, geom = "line", facets = isWE ~ .)
data_nafill <- mutate(data_nafill, isWE = as.factor(ifelse(weekdays(date, abbreviate=TRUE) %in% c("Sat","Sun"),"Weekend","Weekday")))
data_gb_intwe_nafill<- group_by(data_nafill, interval, isWE)
data_intwe_nafill<- summarize(data_gb_intwe_nafill, avg_steps = mean(steps,na.rm=TRUE))
qplot(interval, avg_steps, data=data_intwe_nafill, geom = "line", facets = isWE ~ .)
?qplot
qplot(interval, avg_steps, data=data_intwe_nafill, geom = "line", xlab = "Intervals", ylab = "Average Steps", facets = isWE ~ .)
qplot(interval, avg_steps, data=data_intwe_nafill, geom = "line", xlab = "Intervals", ylab = "Average Steps", main = "Average number of steps split between weekends and weekdays", facets = isWE ~ .)
?media
?median
mean_nafill <- mean(data_dt_nafill$nb_steps, na.rm=TRUE)
median_nafill <- median(data_dt_nafill$nb_steps, na.rm=TRUE)
